#!/bin/bash

#Getting cur user
cur_user=$SUDO_USER

################################################################################
################################################################################
################################################################################
################################################################################

echo "1. Performing system updates and general maintainence"
#Update package list and distro
apt -y update
apt -y upgrade
apt -y autoremove

################################################################################
################################################################################
################################################################################
################################################################################

echo "2. Install dependencies"
apt -y install openssh-server\
	moreutils\
	network-manager\
	net-tools\
	xfce4\
	xfce4-goodies\
	tightvncserver\
	software-properties-common\
	apt-transport-https\
	ca-certificates\
	curl\
	gnupg\
	gnupg-agent\
	lsb-release

#Add docker GPG key
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

#Add apt repository
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

#Update apt w/ additional repository info
apt-get update

#install latest docker version
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin

################################################################################
################################################################################
################################################################################
################################################################################

echo "3. Add SSH through firewall and enable/reload firewall"
ufw enable
#ssh
ufw allow 22/tcp
#OpenVAS scanner web gui
ufw allow 8080/tcp
#VNC ports 5901/5902
ufw allow 5901/tcp
ufw allow 5902/tcp
#reload UFW to apply rules
ufw reload

################################################################################
################################################################################
################################################################################
################################################################################

echo "4. Generating public and private client key for the current user to run script"
/bin/su -c "ssh-keygen -f id_rsa -t rsa -N ''" - $cur_user
mv id_rsa /home/$cur_user/.ssh/id_rsa
mv id_rsa.pub /home/$cur_user/.ssh/id_rsa.pub

################################################################################
################################################################################
################################################################################
################################################################################

echo "5. Backing up id_rsa.pub to /home/$cur_user/files-to-copy/scan-box-pub-rsa-key.txt."
echo "PLEASE COPY THE CONTENTS OF scan-box-pub-rsa-key.txt TO known_hosts AND authorized_keys files at /home/svc-scanner-sec/.ssh/ on suvscnp001.dmz.siteone.org"
mkdir /home/$cur_user/files-to-copy
cat /home/$cur_user/.ssh/id_rsa.pub > /home/$cur_user/files-to-copy/scan-box-pub-rsa-key.txt

################################################################################
################################################################################
################################################################################
################################################################################
echo "6. Getting DMZ server public key for SSH reverse tunnel... UPDATE IP IN SCRIPT IF NEEDED"
#get host pub key from remote SSH server
ssh-keyscan -H -p 45566 192.69.100.14 >> /home/$cur_user/.ssh/known_hosts
ssh-keyscan -H -p 45566 192.69.100.14 >> /home/$cur_user/.ssh/authorized_keys

################################################################################
################################################################################
################################################################################
################################################################################
echo "7. Updating tightvncserver xstartup file."
echo "YOU MUST MANUALLY CONFIGURE THE VNC SERVER PASSWORD VIA THE COMMAND vncserver"
mypasswd="S1t30ne!"
echo $mypasswd | vncpasswd -f > /home/$cur_user/.vnc/passwd
chown -R $cur_user:$cur_user /home/$cur_user/.vnc
chmod 0600 /home/$cur_user/.vnc/passwd

cp /home/$cur_user/.vnc/xstartup /home/$cur_user/.vnc/xstartup.backup
cp xstartup /home/$cur_user/.vnc/xstartup
chmod 755 /home/$cur_user/.vnc/xstartup

################################################################################
################################################################################
################################################################################
################################################################################

echo "8. Fixing required VNC applications..."

echo "8a. Installing Google Chrome"
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
sudo -y apt install ./google-chrome-stable_current_amd64.deb

echo "8b. Fixing terminal shortcut to use x-terminal-emulator..."
echo "If terminal does not work in VNC, navigate to Applications --> System --> Xfce terminal, and run the command sudo update-alternatives --config x-terminal-emulator, and choose x-terminal "
echo "2" | update-alternatives --config x-terminal-emulator

################################################################################
################################################################################
################################################################################
################################################################################

echo "9. Set up a service for reverse SSH tunneling VNC, and the VNC server"
echo " **************************************************************************************** UPDATE URL **************************************************************************************** "

echo "9a. Copying vnc_ssh_tunnel.service into systemd...."
cp vnc_ssh_tunnel.service /etc/systemd/system/

echo "9b. Reloading system daemon...."
systemctl daemon-reload

################################################################################
################################################################################
################################################################################
################################################################################

echo "10. Set up openvas docker container"
mkdir /home/$cur_user/openvas-data
docker pull immauss/openvas

#set up cron job to backup database
crontab -l > mycron
echo "0 0 * * * root docker exec -it <container name> su -c "/usr/lib/postgresql/13/bin/pg_dumpall" -U postgres -f db-backup-file.sql" >/dev/null 2>&1" > mycron
crontab mycron
rm mycron
